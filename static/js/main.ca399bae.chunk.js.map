{"version":3,"sources":["images/red-t-shirt.jpg","images/blue-t-shirt.jpg","images/bright-purple-t-shirt.jpg","images/cobalt-blue-t-shirt.jpg","images/green-t-shirt.jpg","images/grey-t-shirt.jpg","images/light-green-t-shirt.jpg","images/purple-t-shirt.jpg","images/teal-t-shirt.jpg","components/Product.js","components/CartPage.js","components/NavBar.js","components/Homepage.js","actions/homepageActions.js","App.js","serviceWorker.js","reducers/cartReducer.js","data.js","reducers/homepageReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","connect","state","addedItems","cartReducer","props","product","Card","style","height","margin","CardImg","src","image","alt","className","CardBody","CardTitle","name","CardText","size","marginLeft","price","Button","onClick","obj","found","some","objInCart","id","searchArray","dispatch","type","payload","color","useState","total","setTotal","finalCost","setFinalCost","useEffect","reduce","accumulator","currentValue","quantity","modal","setModal","toggle","display","justifyContent","overflowX","scrollbarWidth","marginTop","marginBottom","IconButton","handleDrawerClose","position","left","fontSize","marginRight","length","ListGroup","map","item","ListGroupItem","key","Math","random","ListGroupItemHeading","ListGroupItemText","alignItems","aria-label","width","textAlign","paddingRight","paddingBottom","undefined","block","bottom","disabled","Modal","isOpen","ModalHeader","ModalBody","fontWeight","StyledBadge","withStyles","theme","badge","right","border","palette","background","paper","padding","backgroundColor","Badge","Navbar","dark","expand","Container","textDecoration","Nav","navbar","handleDrawerOpen","badgeContent","products","homepageReducer","setSize","setPrice","open","setOpen","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","track","rail","Drawer","variant","anchor","Row","Col","sm","lg","Label","for","ThemeProvider","Slider","aria-labelledby","valueLabelDisplay","onChange","e","v","console","log","step","max","min","marks","value","label","defaultValue","Input","target","xs","md","App","Boolean","window","location","hostname","match","initialState","action","newCartInc","newCartDec","prod","find","prodQuantity","filter","productData","Blue","BrightPurple","CobaltBlue","Green","Grey","LightGreen","Purple","Red","Teal","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,mD,mBCA3CD,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,6OCkE5BC,eALS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,YAAYD,cAGnBF,EAtDC,SAACI,GAAW,IAClBC,EAAYD,EAAZC,QAsBR,OACE,6BACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,MACRC,OAAQ,SAGV,kBAACC,EAAA,EAAD,CAASC,IAAKN,EAAQO,MAAOC,IAAI,UAAUC,UAAU,aACrD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYX,EAAQY,MACpB,kBAACC,EAAA,EAAD,cACQ,gCAASb,EAAQc,MADzB,KAC0C,IACxC,0BAAMZ,MAAO,CAAEa,WAAY,QAA3B,WACA,oCAAUf,EAAQgB,QAGpB,kBAACC,EAAA,EAAD,CAAQC,QA9BA,YAPI,SAACC,GACnB,IAAIC,GAAQ,EAIZ,OAHIrB,EAAMF,WAAWwB,MAAK,SAACC,GAAD,OAAeA,EAAUtB,QAAQuB,KAAOJ,EAAII,QACpEH,GAAQ,GAEHA,EAGFI,CAAYxB,GACfD,EAAM0B,SAAS,CACbC,KAAM,cACNC,QAAS3B,IAGXD,EAAM0B,SAAS,CACbC,KAAM,oBACNC,QAAS3B,KAqBmB4B,MAAM,QAAhC,qB,2HCqJKjC,eANS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,YAAYD,cAInBF,EAnLE,SAACI,GAAW,IAAD,EACA8B,mBAAS,GADT,mBACnBC,EADmB,KACZC,EADY,OAEQF,mBAAS,GAFjB,mBAEnBG,EAFmB,KAERC,EAFQ,KAI1BC,qBAAU,WACRH,EACEhC,EAAMF,WAAWsC,QACf,SAACC,EAAaC,GAAd,OACED,EAAcC,EAAarC,QAAQgB,MAAQqB,EAAaC,WAC1D,MAGH,CAACvC,EAAMF,aAZgB,MAeAgC,oBAAS,GAfT,mBAenBU,EAfmB,KAeZC,EAfY,KAiBpBC,EAAS,WACbD,GAAUD,IAUZ,OACE,yBACErC,MAAO,CACLwC,QAAS,OACTC,eAAgB,SAChBC,UAAW,SACXC,eAAgB,SAGlB,6BACE,yBACEpC,UAAU,cACVP,MAAO,CAAEE,OAAQ,OAAQ0C,UAAW,OAAQC,aAAc,SAE1D,kBAACC,EAAA,EAAD,CACE9B,QAASnB,EAAMkD,kBACf/C,MAAO,CAAEgD,SAAU,WAAYC,KAAM,IAErC,kBAAC,IAAD,OAEF,0BAAMjD,MAAO,CAAEkD,SAAU,OAAQC,YAAa,SAA9C,aAIA,uBAAG5C,UAAU,sBAAsBP,MAAO,CAAEkD,SAAU,WAEvDrD,EAAMF,WAAWyD,OAAS,EACzB,6BACE,kBAACC,EAAA,EAAD,KACGxD,EAAMF,WAAW2D,KAAI,SAACC,GAAD,OACpB,kBAACC,EAAA,EAAD,CAAeC,IAAKC,KAAKC,UAGvB,0BACE3D,MAAO,CACLwC,QAAS,OACTC,eAAgB,iBAGlB,8BACE,kBAACmB,EAAA,EAAD,KACE,0BAAMrD,UAAU,oBACbgD,EAAKzD,QAAQY,OAGlB,kBAACmD,EAAA,EAAD,cACQ,gCAASN,EAAKzD,QAAQc,MAD9B,KAC+C,IAC7C,0BAAMZ,MAAO,CAAEa,WAAY,QAA3B,WACA,oCAAU0C,EAAKzD,QAAQgB,QAEzB,kBAAC+C,EAAA,EAAD,KACE,yBAAK7D,MAAO,CAAEwC,QAAS,OAAQsB,WAAY,WAA3C,YAEE,kBAAChB,EAAA,EAAD,CACEiB,aAAW,SACX/C,QAAS,WACPnB,EAAM0B,SAAS,CACbC,KAAM,oBACNC,QAAS8B,EAAKzD,YAIlB,kBAAC,IAAD,OAEF,8BAAOyD,EAAKnB,UACZ,kBAACU,EAAA,EAAD,CACEiB,aAAW,SACX/C,QAAS,WACPnB,EAAM0B,SAAS,CACbC,KAAM,oBACNC,QAAS8B,EAAKzD,YAIlB,kBAAC,IAAD,UAKR,8BACE,yBACEM,IAAKmD,EAAKzD,QAAQO,MAClB2D,MAAO,GACP/D,OAAQ,GACRM,UAAU,WACVD,IAAKiD,EAAKzD,QAAQY,cAO9B,wBACEV,MAAO,CACLiE,UAAW,QACXC,aAAc,KACdrB,aAAc,OACdsB,cAAe,SALnB,WAQWvC,IAIb,6BACE,yBAAK5B,MAAO,CAAEiE,UAAW,SAAUf,SAAU,SAA7C,uBAMJ,kBAACnC,EAAA,EAAD,CACEH,KAAK,KACLc,MAAO7B,EAAMF,WAAWyD,OAAS,EAAI,YAASgB,EAC9CC,OAAK,EACLrE,MAAO,CACLgD,SAAU,WACVsB,OAAQ,GAEVtD,QA/HS,WACfuB,IACAR,EAAaH,GACb/B,EAAM0B,SAAS,CACbC,KAAM,eAER3B,EAAMkD,qBA0HAwB,UAAW1E,EAAMF,WAAWyD,OAAS,GATvC,qBAaA,kBAACoB,EAAA,EAAD,CAAOC,OAAQpC,EAAOE,OAAQA,GAC5B,kBAACmC,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,sBACiB,IACf,0BACE3E,MAAO,CACLa,WAAY,MACZa,MAAO,UACPkD,WAAY,SAJhB,IAOI9C,GAEJ,uE,kHC3BGrC,eANS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,YAAYD,cAInBF,EAvIA,SAACI,GACSA,EAAfF,WADiB,IAEnBkF,EAAcC,aAAW,SAACC,GAAD,MAAY,CACzCC,MAAO,CACLC,OAAQ,EACRC,OAAO,aAAD,OAAeH,EAAMI,QAAQC,WAAWC,OAC9CC,QAAS,QACTC,gBAAiB,UACjB7D,MAAO,WANSoD,CAQhBU,KAcJ,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQ/D,MAAM,sBAAsBgE,MAAI,EAACC,OAAO,MAC9C,kBAACC,EAAA,EAAD,KACE,wBACE5F,MAAO,CACL6F,eAAgB,OAChBnE,MAAO,OACPwB,SAAU,SAGZ,uBACE3C,UAAU,sBACVP,MAAO,CAAEkD,SAAU,OAAQC,YAAa,UAT5C,aAaA,kBAAC2C,EAAA,EAAD,CAAKvF,UAAU,UAAUwF,QAAM,GAC7B,kBAACjD,EAAA,EAAD,CAAY9B,QAASnB,EAAMmG,kBACzB,kBAACnB,EAAD,CACEoB,aAAcpG,EAAMF,WAAWsC,QAC7B,SAACC,EAAaC,GAAd,OACED,EAAcC,EAAaC,WAC7B,IAGF,kBAAC,IAAD,CAAkBpC,MAAO,CAAE0B,MAAO,mB,iBC4EnCjC,eAPS,SAACC,GACvB,MAAO,CACLwG,SAAUxG,EAAMyG,gBAAgBD,SAChCvG,WAAYD,EAAME,YAAYD,cAInBF,EA1IE,SAACI,GAAW,IAAD,EACF8B,mBAAS,IADP,mBACnBf,EADmB,KACbwF,EADa,OAEAzE,mBAAS,KAFT,mBAEnBb,EAFmB,KAEZuF,EAFY,OAGF1E,oBAAS,GAHP,mBAGnB2E,EAHmB,KAGbC,EAHa,KAKpBC,EAAWC,YAAe,CAC9BC,UAAW,CACTC,UAAW,CACTC,MAAO,CACLlF,MAAO,WAETmF,MAAO,CACLnF,MAAO,WAEToF,KAAM,CACJpF,MAAO,aAcfM,qBAAU,WACRnC,EAAM0B,SC1CD,CACLC,KAAM,mBD0CL,IAEHQ,qBAAU,WACRnC,EAAM0B,SAAS,CACbC,KAAM,wBACNC,QAAS,CAAEb,OAAME,aAElB,CAACA,EAAOF,IAiBX,OACE,yBAAKZ,MAAO,CAAEuF,gBAAiB,YAC7B,kBAAC,EAAD,CAAQS,iBApCa,WACvBO,GAAQ,MAoCN,kBAACX,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,aAAaC,OAAO,QAAQX,KAAMA,GAChD,kBAAC,EAAD,CAAUvD,kBAnCQ,WACxBwD,GAAQ,OAoCJ,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,yBACErH,MAAO,CACL4C,UAAW,OACX/B,WAAY,OACZsC,YAAa,SAGf,wCACA,kBAACmE,EAAA,EAAD,CACEC,IAAI,aACJvH,MAAO,CACL4C,UAAW,SAGb,0BAAM5C,MAAO,CAAEmD,YAAa,QAA5B,eANF,IAM2DrC,GAE3D,kBAAC0G,EAAA,EAAD,CAAezC,MAAOyB,GACpB,kBAACiB,EAAA,EAAD,CACEC,kBAAgB,kBAChBC,kBAAkB,OAClBC,SAAU,SAACC,EAAGC,GACZC,QAAQC,IAAI,QACZD,QAAQC,IAAIF,GACZzB,EAASyB,IAEXG,KAAM,GACNC,IAAK,IACLC,IAAK,IACLC,MApDF,CACZ,CACEC,MAAO,IACPC,MAAO,QAET,CACED,MAAO,IACPC,MAAO,QAET,CACED,MAAO,IACPC,MAAO,SA0CKC,aAAc,OAIlB,kBAACjB,EAAA,EAAD,CAAOC,IAAI,OAAOvH,MAAO,CAAE4C,UAAW,SAAtC,SAGA,kBAAC4F,EAAA,EAAD,CACEhH,KAAK,SACLd,KAAK,SACLW,GAAG,OACHuG,SAAU,SAACC,GACTzB,EAAQyB,EAAEY,OAAOJ,SAGnB,4BAAQA,MAAM,IAAd,aACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,MAAd,SAIN,kBAAClB,EAAA,EAAD,CAAKuB,GAAG,KAAKrB,GAAG,MACd,kBAACH,EAAA,EAAD,CAAKlH,MAAO,CAAE4C,UAAW,SACtB/C,EAAMqG,SAAS5C,KAAI,SAACxD,GAAD,OAClB,kBAACqH,EAAA,EAAD,CAAKuB,GAAG,KAAKtB,GAAG,IAAIuB,GAAG,IAAIlF,IAAK3D,EAAQuB,IACtC,kBAAC,EAAD,CAASvB,QAASA,gBE1HrB8I,MAJf,WACE,OAAO,kBAAC,EAAD,OCIWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BClBAC,EAAe,CACnBvJ,WAAY,IAqDCC,EAnDK,WAAmC,IAAlCF,EAAiC,uDAAzBwJ,EAAcC,EAAW,uCACpD,OAAQA,EAAO3H,MACb,IAAK,cACH,MAAO,CACL7B,WAAW,GAAD,mBACLD,EAAMC,YADD,CAER,CAAEG,QAASqJ,EAAO1H,QAASW,SAAU,MAI3C,IAAK,oBACH,IAAMgH,EAAa1J,EAAMC,WAAW2D,KAAI,SAACC,GACvC,OAAIA,EAAKzD,QAAQuB,KAAO8H,EAAO1H,QAAQJ,GAC9B,CAAEvB,QAASqJ,EAAO1H,QAASW,SAAUmB,EAAKnB,SAAW,GAClDmB,KAGd,MAAO,CACL5D,WAAW,YAAKyJ,IAGpB,IAAK,oBACH,IAIIC,EAJAC,EAAO5J,EAAMC,WAAW4J,MAC1B,SAAChG,GAAD,OAAUA,EAAKzD,QAAQuB,KAAO8H,EAAO1H,QAAQJ,MAE3CmI,EAAeF,EAAKlH,SAcxB,OAXEiH,EADmB,IAAjBG,EACW9J,EAAMC,WAAW8J,QAC5B,SAAClG,GAAD,OAAUA,EAAKzD,QAAQuB,KAAO8H,EAAO1H,QAAQJ,MAGlC3B,EAAMC,WAAW2D,KAAI,SAACC,GACjC,OAAIA,EAAKzD,QAAQuB,KAAO8H,EAAO1H,QAAQJ,GAC9B,CAAEvB,QAASqJ,EAAO1H,QAASW,SAAUmB,EAAKnB,SAAW,GAClDmB,KAIT,CACL5D,WAAW,YAAK0J,IAEpB,IAAK,aACH,MAAO,CACL1J,WAAY,IAEhB,QACE,OAAOD,I,kLCiCEgK,GAzEK,CAClB,CACErI,GAAI,IACJT,KAAM,IACNF,KAAM,eACNI,MAAO,IACPT,MAAOsJ,MAET,CACEtI,GAAI,IACJT,KAAM,IACNF,KAAM,wBACNI,MAAO,IACPT,MAAOuJ,MAET,CACEvI,GAAI,IACJT,KAAM,IACNF,KAAM,sBACNI,MAAO,IACPT,MAAOwJ,MAET,CACExI,GAAI,IACJT,KAAM,IACNF,KAAM,gBACNI,MAAO,IACPT,MAAOyJ,MAET,CACEzI,GAAI,IACJT,KAAM,IACNF,KAAM,eACNI,MAAO,IACPT,MAAO0J,MAET,CACE1I,GAAI,IACJT,KAAM,IACNF,KAAM,sBACNI,MAAO,IACPT,MAAO2J,MAET,CACE3I,GAAI,IACJT,KAAM,IACNF,KAAM,iBACNI,MAAO,IACPT,MAAO4J,MAET,CACE5I,GAAI,IACJT,KAAM,IACNF,KAAM,cACNI,MAAO,IACPT,MAAO6J,MAET,CACE7I,GAAI,IACJT,KAAM,KACNF,KAAM,eACNI,MAAO,IACPT,MAAO8J,MAET,CACE9I,GAAI,IACJT,KAAM,IACNF,KAAM,cACNI,MAAO,IACPT,MAAO6J,OC9ELhB,GAAe,CACnBhD,SAAUwD,IA+BGvD,GA7BS,WAAmC,IAAlCzG,EAAiC,uDAAzBwJ,GAAcC,EAAW,uCACxD,OAAQA,EAAO3H,MACb,IAAK,eACH,MAAO,CACL0E,SAAUwD,IAGd,IAAK,wBACH,IAAM9I,EAAOuI,EAAO1H,QAAQb,KAEtBE,EAAQqI,EAAO1H,QAAQX,MAU7B,MAAO,CACLoF,SARW,KAATtF,EACa8I,GAAYD,QAAO,SAAAlG,GAAI,OAAIA,EAAKzC,OAASA,KAEzC4I,GAAYD,QACzB,SAAAlG,GAAI,OAAIA,EAAKzC,OAASA,GAASyC,EAAK3C,OAASA,MAOnD,QACE,OAAOlB,ICzBE0K,eAAgB,CAC7BjE,mBACAvG,gBCHWyK,GAAQC,YACnBC,GACAzB,OAAO0B,8BAAgC1B,OAAO0B,gCCKhDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SNmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ca399bae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-t-shirt.b4bb683d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue-t-shirt.51ea43b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bright-purple-t-shirt.8fa9012b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cobalt-blue-t-shirt.1ead1aa2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/green-t-shirt.717bb2ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grey-t-shirt.d9a81838.jpg\";","module.exports = __webpack_public_path__ + \"static/media/light-green-t-shirt.96c2084a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/purple-t-shirt.ee4da645.jpg\";","module.exports = __webpack_public_path__ + \"static/media/teal-t-shirt.fe47325c.jpg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Product = (props) => {\r\n  const { product } = props;\r\n\r\n  const searchArray = (obj) => {\r\n    let found = false;\r\n    if (props.addedItems.some((objInCart) => objInCart.product.id === obj.id)) {\r\n      found = true;\r\n    }\r\n    return found;\r\n  };\r\n  const addFunc = () => {\r\n    if (!searchArray(product)) {\r\n      props.dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: product,\r\n      });\r\n    } else {\r\n      props.dispatch({\r\n        type: \"INCREASE_QUANTITY\",\r\n        payload: product,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Card\r\n        style={{\r\n          height: \"30%\",\r\n          margin: \"10px\",\r\n        }}\r\n      >\r\n        <CardImg src={product.image} alt=\"Product\" className=\"card-img\" />\r\n        <CardBody>\r\n          <CardTitle>{product.name}</CardTitle>\r\n          <CardText>\r\n            Size: <strong>{product.size}</strong> |{\" \"}\r\n            <span style={{ marginLeft: \"2px\" }}>Price: </span>\r\n            <strong>${product.price}</strong>\r\n          </CardText>\r\n\r\n          <Button onClick={addFunc} color=\"info\">\r\n            Add To Cart\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    addedItems: state.cartReducer.addedItems,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Product);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\n// import NavBar from \"./NavBar\";\r\n\r\nconst CartPage = (props) => {\r\n  const [total, setTotal] = useState(0);\r\n  const [finalCost, setFinalCost] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTotal(\r\n      props.addedItems.reduce(\r\n        (accumulator, currentValue) =>\r\n          accumulator + currentValue.product.price * currentValue.quantity,\r\n        0\r\n      )\r\n    );\r\n  }, [props.addedItems]);\r\n\r\n  //Code for handling model\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  const checkout = () => {\r\n    toggle();\r\n    setFinalCost(total);\r\n    props.dispatch({\r\n      type: \"EMPTY_CART\",\r\n    });\r\n    props.handleDrawerClose();\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        overflowX: \"hidden\",\r\n        scrollbarWidth: \"thin\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          className=\"text-center\"\r\n          style={{ margin: \"60px\", marginTop: \"30px\", marginBottom: \"30px\" }}\r\n        >\r\n          <IconButton\r\n            onClick={props.handleDrawerClose}\r\n            style={{ position: \"absolute\", left: 0 }}\r\n          >\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <span style={{ fontSize: \"25px\", marginRight: \"10px\" }}>\r\n            Your Cart\r\n          </span>\r\n\r\n          <i className=\"fa fa-shopping-cart\" style={{ fontSize: \"25px\" }}></i>\r\n        </div>\r\n        {props.addedItems.length > 0 ? (\r\n          <div>\r\n            <ListGroup>\r\n              {props.addedItems.map((item) => (\r\n                <ListGroupItem key={Math.random()}>\r\n                  {/* <Row>\r\n                    <Col xs=\"8\"> */}\r\n                  <span\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <span>\r\n                      <ListGroupItemHeading>\r\n                        <span className=\"cart-list-header\">\r\n                          {item.product.name}\r\n                        </span>\r\n                      </ListGroupItemHeading>\r\n                      <ListGroupItemText>\r\n                        Size: <strong>{item.product.size}</strong> |{\" \"}\r\n                        <span style={{ marginLeft: \"2px\" }}>Price: </span>\r\n                        <strong>${item.product.price}</strong>\r\n                      </ListGroupItemText>\r\n                      <ListGroupItemText>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          Quantity:\r\n                          <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={() => {\r\n                              props.dispatch({\r\n                                type: \"DECREASE_QUANTITY\",\r\n                                payload: item.product,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <RemoveIcon />\r\n                          </IconButton>\r\n                          <span>{item.quantity}</span>\r\n                          <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={() => {\r\n                              props.dispatch({\r\n                                type: \"INCREASE_QUANTITY\",\r\n                                payload: item.product,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </ListGroupItemText>\r\n                    </span>\r\n                    <span>\r\n                      <img\r\n                        src={item.product.image}\r\n                        width={90}\r\n                        height={60}\r\n                        className=\"cart-img\"\r\n                        alt={item.product.name}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n            <h3\r\n              style={{\r\n                textAlign: \"right\",\r\n                paddingRight: \"5%\",\r\n                marginBottom: \"20px\",\r\n                paddingBottom: \"50px\",\r\n              }}\r\n            >\r\n              Total: ${total}\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div style={{ textAlign: \"center\", fontSize: \"18px\" }}>\r\n              Your cart is empty\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          size=\"lg\"\r\n          color={props.addedItems.length > 0 ? \"info\" : undefined}\r\n          block\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n          }}\r\n          onClick={checkout}\r\n          disabled={!props.addedItems.length > 0}\r\n        >\r\n          Complete Checkout\r\n        </Button>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader>Checkout</ModalHeader>\r\n          <ModalBody>\r\n            Your total is:{\" \"}\r\n            <span\r\n              style={{\r\n                marginLeft: \"5px\",\r\n                color: \"#17abcd\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              ${finalCost}\r\n            </span>\r\n            <div>Thank you for shopping with us!</div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    addedItems: state.cartReducer.addedItems,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CartPage);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  NavbarToggler,\r\n  Dropdown,\r\n} from \"reactstrap\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst NavBar = (props) => {\r\n  const { addedItems } = props;\r\n  const StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n      right: -3,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: \"0 4px\",\r\n      backgroundColor: \"#17abcd\",\r\n      color: \"#fff\",\r\n    },\r\n  }))(Badge);\r\n\r\n  // //Code For Collapse\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n  // const toggleCollapse = () => setIsOpen(!isOpen);\r\n\r\n  // //Code For DropDown\r\n  // const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  // const toggle = (e) => {\r\n  //   if (e.target.classList.contains(\"dropdown-toggle\")) {\r\n  //     setDropdownOpen((prevState) => !prevState);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"navbar-dark bg-dark\" dark expand=\"md\">\r\n        <Container>\r\n          <h1\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"#fff\",\r\n              fontSize: \"30px\",\r\n            }}\r\n          >\r\n            <i\r\n              className=\"fa fa-shopping-cart\"\r\n              style={{ fontSize: \"25px\", marginRight: \"10px\" }}\r\n            ></i>\r\n            ReactCart\r\n          </h1>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <IconButton onClick={props.handleDrawerOpen}>\r\n              <StyledBadge\r\n                badgeContent={props.addedItems.reduce(\r\n                  (accumulator, currentValue) =>\r\n                    accumulator + currentValue.quantity,\r\n                  0\r\n                )}\r\n              >\r\n                <ShoppingCartIcon style={{ color: \"#fff\" }} />\r\n              </StyledBadge>\r\n            </IconButton>\r\n          </Nav>\r\n          {/* Navbar */}\r\n          {/* <NavbarToggler onClick={toggleCollapse} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n                <DropdownToggle nav caret style={{ paddingRight: \"20px\" }}>\r\n                  <Badge pill color=\"info\">\r\n                    {props.addedItems.reduce(\r\n                      (accumulator, currentValue) =>\r\n                        accumulator + currentValue.quantity,\r\n                      0\r\n                    )}\r\n                  </Badge>\r\n                  <i\r\n                    className=\"fa fa-shopping-cart\"\r\n                    style={{ fontSize: \"25px\" }}\r\n                  ></i>\r\n                </DropdownToggle>\r\n                <DropdownMenu right style={{ margin: \"0\" }}>\r\n                  {addedItems.length > 0 ? (\r\n                    <ListGroup flush>\r\n                      {addedItems.map((item) => (\r\n                        <DropdownItem key={item.product.id}>\r\n                          <ListGroupItem>\r\n                            <ListGroupItemHeading>\r\n                              <span\r\n                                style={{\r\n                                  width: \"8em\",\r\n                                  display: \"inline-block\",\r\n                                }}\r\n                              >\r\n                                {item.product.name}\r\n                              </span>\r\n                              <img\r\n                                src={item.product.image}\r\n                                alt=\"Product\"\r\n                                style={{\r\n                                  width: \"30%\",\r\n                                  marginLeft: \"40px\",\r\n                                  marginRight: \"40px\",\r\n                                }}\r\n                              />\r\n                            </ListGroupItemHeading>\r\n                            <ListGroupItemText style={{ marginTop: \"0px\" }}>\r\n                              Size: <strong>{item.product.size}</strong>\r\n                              <span style={{ margin: \"0px 10px\" }}>|</span>\r\n                              Quantity: <strong> {item.quantity}</strong>\r\n                            </ListGroupItemText>\r\n                          </ListGroupItem>\r\n                        </DropdownItem>\r\n                      ))}\r\n                    </ListGroup>\r\n                  ) : (\r\n                    <div style={{ padding: \"10px\" }}>Your cart is empty</div>\r\n                  )}\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n              <Button\r\n                outline\r\n                color=\"info\"\r\n                tag={Link}\r\n                to=\"/cart\"\r\n                //style={{ marginLeft: \"30px\" }}\r\n              >\r\n                Checkout Page <i className=\"fa fa-angle-right\"></i>\r\n              </Button>\r\n            </Nav>\r\n          </Collapse> */}\r\n        </Container>\r\n        {/* Navbar end */}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    addedItems: state.cartReducer.addedItems,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Product from \"./Product\";\r\nimport CartPage from \"./CartPage\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { Container, Row, Col, Input, Label, CustomInput } from \"reactstrap\";\r\nimport NavBar from \"./NavBar\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\nimport { getAllProducts } from \"../actions/homepageActions\";\r\n\r\nconst Homepage = (props) => {\r\n  const [size, setSize] = useState(\"\");\r\n  const [price, setPrice] = useState(320);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const muiTheme = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        thumb: {\r\n          color: \"#17abcd\",\r\n        },\r\n        track: {\r\n          color: \"#17abcd\",\r\n        },\r\n        rail: {\r\n          color: \"black\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.dispatch(getAllProducts(size, price));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.dispatch({\r\n      type: \"GET_FILTERED_PRODUCTS\",\r\n      payload: { size, price },\r\n    });\r\n  }, [price, size]);\r\n\r\n  const marks = [\r\n    {\r\n      value: 110,\r\n      label: \"$110\",\r\n    },\r\n    {\r\n      value: 200,\r\n      label: \"$200\",\r\n    },\r\n    {\r\n      value: 320,\r\n      label: \"$320\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f8f9fa\" }}>\r\n      <NavBar handleDrawerOpen={handleDrawerOpen} />\r\n      <Container>\r\n        <Drawer variant=\"persistent\" anchor=\"right\" open={open}>\r\n          <CartPage handleDrawerClose={handleDrawerClose} />\r\n        </Drawer>\r\n        <Row>\r\n          <Col sm=\"12\" lg=\"2\">\r\n            <div\r\n              style={{\r\n                marginTop: \"50px\",\r\n                marginLeft: \"10px\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            >\r\n              <h3>Filters:</h3>\r\n              <Label\r\n                for=\"priceRange\"\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                <span style={{ marginRight: \"5px\" }}>Max Price: </span>${price}\r\n              </Label>\r\n              <ThemeProvider theme={muiTheme}>\r\n                <Slider\r\n                  aria-labelledby=\"discrete-slider\"\r\n                  valueLabelDisplay=\"auto\"\r\n                  onChange={(e, v) => {\r\n                    console.log(\"test\");\r\n                    console.log(v);\r\n                    setPrice(v);\r\n                  }}\r\n                  step={10}\r\n                  max={320}\r\n                  min={110}\r\n                  marks={marks}\r\n                  defaultValue={320}\r\n                />\r\n              </ThemeProvider>\r\n\r\n              <Label for=\"size\" style={{ marginTop: \"30px\" }}>\r\n                Size:\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"size\"\r\n                onChange={(e) => {\r\n                  setSize(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"\">All Sizes</option>\r\n                <option value=\"S\">Small</option>\r\n                <option value=\"M\">Medium</option>\r\n                <option value=\"L\">Large</option>\r\n                <option value=\"XL\">XL</option>\r\n              </Input>\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"12\" lg=\"10\">\r\n            <Row style={{ marginTop: \"50px\" }}>\r\n              {props.products.map((product) => (\r\n                <Col xs=\"12\" sm=\"6\" md=\"4\" key={product.id}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.homepageReducer.products,\r\n    addedItems: state.cartReducer.addedItems,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Homepage);\r\n","export const getAllProducts = () => {\r\n  return {\r\n    type: \"GET_PRODUCTS\",\r\n  };\r\n};\r\n\r\n// export const getProductsBySize = size => {\r\n//   return {\r\n//     type: \"GET_PRODUCTS_BY_SIZE\",\r\n//     payload: size\r\n//   };\r\n// };\r\n\r\n// export const getProductsByPrice = price => {\r\n//   return {\r\n//     type: \"GET_PRODUCTS_BY_PRICEE\",\r\n//     payload: price\r\n//   };\r\n// };\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Homepage from \"./components/Homepage\";\r\nimport CartPage from \"./components/CartPage\";\r\n\r\nfunction App() {\r\n  return <Homepage />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  addedItems: [],\r\n};\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return {\r\n        addedItems: [\r\n          ...state.addedItems,\r\n          { product: action.payload, quantity: 1 },\r\n        ],\r\n      };\r\n\r\n    case \"INCREASE_QUANTITY\":\r\n      const newCartInc = state.addedItems.map((item) => {\r\n        if (item.product.id === action.payload.id)\r\n          return { product: action.payload, quantity: item.quantity + 1 };\r\n        else return item;\r\n      });\r\n\r\n      return {\r\n        addedItems: [...newCartInc],\r\n      };\r\n\r\n    case \"DECREASE_QUANTITY\":\r\n      let prod = state.addedItems.find(\r\n        (item) => item.product.id === action.payload.id\r\n      );\r\n      let prodQuantity = prod.quantity;\r\n      let newCartDec;\r\n      if (prodQuantity === 1) {\r\n        newCartDec = state.addedItems.filter(\r\n          (item) => item.product.id !== action.payload.id\r\n        );\r\n      } else {\r\n        newCartDec = state.addedItems.map((item) => {\r\n          if (item.product.id === action.payload.id)\r\n            return { product: action.payload, quantity: item.quantity - 1 };\r\n          else return item;\r\n        });\r\n      }\r\n\r\n      return {\r\n        addedItems: [...newCartDec],\r\n      };\r\n    case \"EMPTY_CART\":\r\n      return {\r\n        addedItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import Blue from \"./images/blue-t-shirt.jpg\";\r\nimport BrightPurple from \"./images/bright-purple-t-shirt.jpg\";\r\nimport CobaltBlue from \"./images/cobalt-blue-t-shirt.jpg\";\r\nimport Green from \"./images/green-t-shirt.jpg\";\r\nimport Grey from \"./images/grey-t-shirt.jpg\";\r\nimport LightGreen from \"./images/light-green-t-shirt.jpg\";\r\nimport Purple from \"./images/purple-t-shirt.jpg\";\r\nimport Red from \"./images/red-t-shirt.jpg\";\r\nimport Teal from \"./images/teal-t-shirt.jpg\";\r\n\r\nconst productData = [\r\n  {\r\n    id: 201,\r\n    size: \"S\",\r\n    name: \"Blue T-Shirt\",\r\n    price: 110,\r\n    image: Blue,\r\n  },\r\n  {\r\n    id: 202,\r\n    size: \"S\",\r\n    name: \"Bright Purple T-Shirt\",\r\n    price: 120,\r\n    image: BrightPurple,\r\n  },\r\n  {\r\n    id: 203,\r\n    size: \"M\",\r\n    name: \"Cobalt Blue T-Shirt\",\r\n    price: 170,\r\n    image: CobaltBlue,\r\n  },\r\n  {\r\n    id: 204,\r\n    size: \"M\",\r\n    name: \"Green T-shirt\",\r\n    price: 230,\r\n    image: Green,\r\n  },\r\n  {\r\n    id: 205,\r\n    size: \"M\",\r\n    name: \"Grey T-shirt\",\r\n    price: 260,\r\n    image: Grey,\r\n  },\r\n  {\r\n    id: 206,\r\n    size: \"L\",\r\n    name: \"Light Green T-shirt\",\r\n    price: 200,\r\n    image: LightGreen,\r\n  },\r\n  {\r\n    id: 207,\r\n    size: \"L\",\r\n    name: \"Purple T-shirt\",\r\n    price: 130,\r\n    image: Purple,\r\n  },\r\n  {\r\n    id: 208,\r\n    size: \"M\",\r\n    name: \"Red T-shirt\",\r\n    price: 300,\r\n    image: Red,\r\n  },\r\n  {\r\n    id: 209,\r\n    size: \"XL\",\r\n    name: \"Teal T-shirt\",\r\n    price: 320,\r\n    image: Teal,\r\n  },\r\n  {\r\n    id: 210,\r\n    size: \"S\",\r\n    name: \"Red T-shirt\",\r\n    price: 320,\r\n    image: Red,\r\n  },\r\n];\r\n\r\nexport default productData;\r\n","import productData from \"../data\";\r\nconst initialState = {\r\n  products: productData\r\n};\r\nconst homepageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PRODUCTS\":\r\n      return {\r\n        products: productData\r\n      };\r\n\r\n    case \"GET_FILTERED_PRODUCTS\":\r\n      const size = action.payload.size;\r\n\r\n      const price = action.payload.price;\r\n\r\n      let filteredList = productData;\r\n      if (size === \"\") {\r\n        filteredList = productData.filter(item => item.price <= price);\r\n      } else {\r\n        filteredList = productData.filter(\r\n          item => item.price <= price && item.size === size\r\n        );\r\n      }\r\n      return {\r\n        products: filteredList\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default homepageReducer;\r\n","import cartReducer from \"./cartReducer\";\r\nimport homepageReducer from \"./homepageReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  homepageReducer,\r\n  cartReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}